#!/bin/bash
set -euo pipefail

# Wait for syslog to start
echo "Waiting for syslog to start"
while ! netstat -lnpu | grep -q rsyslogd; do
    sleep 1
done

# All output after this is redirected to syslog via logger command
exec 1> >(logger -t startup)
exec 2>&1

mkdir -p "${DHCP_DIR}" "${TFTP_DIR}" "${HTTP_DIR}"

# Configure cloud-init files
if [[ -n "${TARGET_SERVER_NAME}" && -n "${TARGET_PW_HASH}" && -n "${TARGET_USERNAME}" && \
      -n "${TARGET_SERVER_NIC}" && -n "${TARGET_SERVER_IP}" && -n "${CIDR}" && \
      -n "${ROUTER_IP}" && -n "${DNS_IP}" ]]; then
    echo "Updating cloud-init data"
    cat /templates/meta-data.template | envsubst > "${HTTP_DIR}"/meta-data
    cat /templates/user-data.template | envsubst > "${HTTP_DIR}"/user-data
    cat /templates/vendor-data.template | envsubst > "${HTTP_DIR}"/vendor-data
fi

# Configure grub
if [[ -n "${PXE_SERVER_IP}" && -n "${ISO_FILE}" ]]; then
    mkdir -p "${TFTP_DIR}/grub"
    echo "Updating bootloader config"
    cat /templates/grub.cfg.template | envsubst > "${TFTP_DIR}/grub/grub.cfg"
fi

# Configure dhcpd
if [[ -n "${PXE_SERVER_IP}" && -n "${NETWORK}" && -n "${NETMASK}" && \
      -n "${ROUTER_IP}" && -n "${DNS_IP}" && -n "${TARGET_SERVER_NAME}" && \
      -n "${TARGET_SERVER_MAC}" && -n "${TARGET_SERVER_IP}" ]]; then
    echo "Updating dhcp config"
    cat /templates/dhcpd.conf.template | envsubst > "${DHCP_DIR}/dhcpd.conf"
    touch "${DHCP_DIR}/dhcpd.leases"
fi

# Configure nginx
cat /templates/nginx.conf.template | envsubst '${HTTP_DIR}' > /etc/nginx/nginx.conf

echo "Starting services"
supervisorctl start all
echo "Finished startup"
